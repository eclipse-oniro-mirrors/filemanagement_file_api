# Copyright (C) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/filemanagement/file_api/file_api.gni")

ohos_shared_library("cj_file_fs_ffi") {
  include_dirs = [
    "${src_path}/common",
    "${src_path}/common/file_helper",
    "${src_path}/mod_fs",
    "${src_path}/mod_fs/class_file",
    "${src_path}/mod_fs/class_randomaccessfile",
    "${src_path}/mod_fs/class_readeriterator",
    "${src_path}/mod_fs/class_stream",
    "${src_path}/mod_fs/properties",
    "${utils_path}/common/include",
    "${utils_path}/filemgmt_libhilog",
    "${utils_path}/filemgmt_libh",
    "${utils_path}/filemgmt_libn/include",
    "${file_api_path}/interfaces/kits/cj/src",
    "${file_api_path}/interfaces/kits/native/remote_uri",
    "${file_api_path}/interfaces/kits/native/task_signal",
    "${file_api_path}/interfaces/kits/rust/include",
  ]

  sources = [
    "../js/src/common/file_api_debug.cpp",
    "../js/src/common/file_fs_trace.cpp",
    "../js/src/common/file_helper/fd_guard.cpp",
    "../js/src/mod_fs/class_file/file_n_exporter.cpp",
    "../js/src/mod_fs/class_stream/stream_n_exporter.cpp",
    "../js/src/mod_fs/common_func.cpp",
    "src/copy.cpp",
    "src/copy_dir.cpp",
    "src/copy_file.cpp",
    "src/fdatasync.cpp",
    "src/file_ffi.cpp",
    "src/file_fs_ffi.cpp",
    "src/file_fs_impl.cpp",
    "src/file_impl.cpp",
    "src/fsync.cpp",
    "src/list_file.cpp",
    "src/lseek.cpp",
    "src/mkdtemp.cpp",
    "src/move_file.cpp",
    "src/randomAccessFile_impl.cpp",
    "src/readerIterator_impl.cpp",
    "src/stat_ffi.cpp",
    "src/stat_impl.cpp",
    "src/stream_ffi.cpp",
    "src/stream_impl.cpp",
    "src/symlink.cpp",
    "src/task_signal_impl.cpp",
    "src/translistener.cpp",
    "src/uni_error.cpp",
    "src/utils.cpp",
    "src/watcher_impl.cpp",
    "src/xattr.cpp",
    "src/xattr_ffi.cpp",
  ]

  deps = [
    "${file_api_path}/interfaces/kits/js:build_kits_js",
    "${file_api_path}/interfaces/kits/js:fs",
    "${file_api_path}/interfaces/kits/native:remote_uri_native",
    "${file_api_path}/interfaces/kits/native:task_signal_native",
    "${file_api_path}/interfaces/kits/rust:rust_file",
    "${utils_path}/filemgmt_libhilog:filemgmt_libhilog",
    "${utils_path}/filemgmt_libn:filemgmt_libn",
  ]

  cflags_cc = [ "-std=c++17" ]
  use_exceptions = true
  if (use_mingw_win) {
    defines = [ "WIN_PLATFORM" ]
  }
  if (use_mac) {
    defines = [ "IOS_PLATFORM" ]
  }

  external_deps = [
    "ability_base:zuri",
    "ability_runtime:ability_manager",
    "ability_runtime:abilitykit_native",
    "access_token:libtokenid_sdk",
    "app_file_service:fileuri_native",
    "bounds_checking_function:libsec_shared",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "data_share:datashare_common",
    "data_share:datashare_consumer",
    "dfs_service:distributed_file_daemon_kit_inner",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "ipc:ipc_single",
    "napi:ace_napi",
    "napi:cj_bind_ffi",
    "napi:cj_bind_native",
    "samgr:samgr_proxy",
  ]

  if (!use_mingw_win && !use_mac) {
    cflags = [
      "-fvisibility=hidden",
      "-fdata-sections",
      "-ffunction-sections",
      "-Oz",
    ]
    cflags_cc += [
      "-fvisibility-inlines-hidden",
      "-Oz",
    ]
    defines = [ "FILE_API_TRACE" ]
    branch_protector_ret = "pac_ret"
    sanitize = {
      integer_overflow = true
      ubsan = true
      boundary_sanitize = true
      cfi = true
      cfi_cross_dso = true
      debug = false
    }
  }

  innerapi_tags = [ "platformsdk" ]
  part_name = "file_api"
  subsystem_name = "filemanagement"
}

ohos_shared_library("cj_statvfs_ffi") {
  cflags = [
    "-fvisibility=hidden",
    "-fdata-sections",
    "-ffunction-sections",
    "-Oz",
  ]
  cflags_cc = [
    "-fvisibility-inlines-hidden",
    "-Oz",
  ]
  branch_protector_ret = "pac_ret"
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  include_dirs = [ "${file_api_path}/interfaces/kits/cj/src" ]

  sources = [
    "src/statvfs_ffi.cpp",
    "src/statvfs_impl.cpp",
    "src/uni_error.cpp",
  ]

  deps = [
    "${utils_path}/filemgmt_libhilog:filemgmt_libhilog",
    "${utils_path}/filemgmt_libn:filemgmt_libn",
  ]
  external_deps = [
    "hilog:libhilog",
    "napi:ace_napi",
    "napi:cj_bind_ffi",
    "napi:cj_bind_native",
  ]

  innerapi_tags = [ "platformsdk" ]
  part_name = "file_api"
  subsystem_name = "filemanagement"
}

group("fs_ffi_packages") {
  deps = [
    ":cj_file_fs_ffi",
    ":cj_statvfs_ffi",
  ]
}
