# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/filemanagement/file_api/file_api.gni")

ohos_unittest("napi_file_fs_mock_test") {
  branch_protector_ret = "pac_ret"
  testonly = true

  module_out_path = "file_api/file_api"

  include_dirs = [
    "${file_api_path}/interfaces/kits/js/src/common",
    "${file_api_path}/interfaces/kits/js/src/common/file_helper",
    "${file_api_path}/interfaces/kits/js/src/mod_fs",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/class_atomicfile",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/class_randomaccessfile",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/class_watcher",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/properties",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/properties/copy_listener",
    "${file_api_path}/interfaces/kits/native/task_signal",
    "${file_api_path}/interfaces/kits/rust/include",
    "${file_api_path}/interfaces/test/unittest/common_mock",
    "${file_api_path}/interfaces/test/unittest/napi_js/mock",
    "${utils_path}/common/include",
  ]

  sources = [
    "${file_api_path}/interfaces/kits/js/src/common/file_api_debug.cpp",
    "${file_api_path}/interfaces/kits/js/src/common/file_fs_trace.cpp",
    "${file_api_path}/interfaces/kits/js/src/common/file_helper/fd_guard.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/class_atomicfile/atomicfile_n_exporter.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/class_file/file_n_exporter.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/class_randomaccessfile/randomaccessfile_n_exporter.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/class_readeriterator/readeriterator_n_exporter.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/class_stat/stat_n_exporter.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/class_stream/stream_n_exporter.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/class_tasksignal/task_signal_entity.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/class_tasksignal/task_signal_n_exporter.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/class_watcher/watcher_entity.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/class_watcher/watcher_n_exporter.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/common_func.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/module.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/properties/close.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/properties/connectdfs.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/properties/copy.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/properties/copy_file.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/properties/copy_listener/trans_listener.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/properties/copydir.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/properties/create_randomaccessfile.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/properties/create_stream.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/properties/create_streamrw.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/properties/disconnectdfs.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/properties/dup.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/properties/fdatasync.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/properties/fdopen_stream.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/properties/fsync.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/properties/listfile.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/properties/lseek.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/properties/lstat.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/properties/mkdtemp.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/properties/move.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/properties/movedir.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/properties/open.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/properties/prop_n_exporter.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/properties/read_lines.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/properties/read_text.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/properties/rename.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/properties/rmdirent.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/properties/stat.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/properties/symlink.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/properties/truncate.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/properties/utimes.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/properties/watcher.cpp",
    "${file_api_path}/interfaces/kits/js/src/mod_fs/properties/xattr.cpp",
    "${file_api_path}/interfaces/test/unittest/common_mock/eventfd_mock.cpp",
    "${file_api_path}/interfaces/test/unittest/common_mock/inotify_mock.cpp",
    "${file_api_path}/interfaces/test/unittest/common_mock/stdio_mock.cpp",
    "${file_api_path}/interfaces/test/unittest/common_mock/unistd_mock.cpp",
    "${file_api_path}/interfaces/test/unittest/common_mock/uv_fs_mock.cpp",
    "mock/libn_mock.cpp",
    "mod_fs/class_atomicfile/atomicfile_mock_test.cpp",
    "mod_fs/class_randomaccessfile/randomaccessfile_n_exporter_mock_test.cpp",
    "mod_fs/class_watcher/watcher_entity_test.cpp",
    "mod_fs/properties/close_mock_test.cpp",
    "mod_fs/properties/fdatasync_mock_test.cpp",
    "mod_fs/properties/lstat_mock_test.cpp",
    "mod_fs/properties/mkdtemp_mock_test.cpp",
    "mod_fs/properties/movedir_mock_test.cpp",
    "mod_fs/properties/prop_n_exporter_mock_test.cpp",
    "mod_fs/properties/read_text_mock_test.cpp",
    "mod_fs/properties/rename_mock_test.cpp",
    "mod_fs/properties/stat_mock_test.cpp",
    "mod_fs/properties/symlink_mock_test.cpp",
    "mod_fs/properties/truncate_mock_test.cpp",
    "mod_fs/properties/utimes_mock_test.cpp",
  ]

  deps = [
    "${file_api_path}/interfaces/kits/js:fs",
    "${file_api_path}/interfaces/kits/native:remote_uri_native",
    "${file_api_path}/interfaces/kits/native:task_signal_native",
    "${file_api_path}/interfaces/kits/rust:rust_file",
    "${utils_path}/filemgmt_libhilog:filemgmt_libhilog",
    "${utils_path}/filemgmt_libn:filemgmt_libn",
  ]

  external_deps = [
    "ability_base:zuri",
    "ability_runtime:ability_manager",
    "ability_runtime:abilitykit_native",
    "ability_runtime:extensionkit_native",
    "access_token:libtokenid_sdk",
    "app_file_service:fileuri_native",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "data_share:datashare_common",
    "data_share:datashare_consumer",
    "dfs_service:distributed_file_daemon_kit_inner",
    "dfs_service:libdistributedfileutils",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "hitrace:hitrace_meter",
    "ipc:ipc_single",
    "libuv:uv",
    "napi:ace_napi",
    "samgr:samgr_proxy",
  ]

  defines = [ "private=public" ]

  use_exceptions = true
}
